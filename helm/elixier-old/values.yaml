# Default values for elixier.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

kubectl_image:
  repository: bitnami/kubectl
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

core_image:
  repository: registry.gitlab.com/abyres/releases/elixier
  pullPolicy: IfNotPresent
  tag: "1.0.3-20230531.42"

pgsql_image:
  repository: registry.gitlab.com/abyres/releases/pgsql-citus
  pullPolicy: IfNotPresent
  tag: "pgsql14-1.0.2-20230406.322"

hms_image:
  repository: registry.gitlab.com/abyres/releases/hive
  pullPolicy: IfNotPresent
  tag: "3.1.2-2"

minio_image:
  repository: minio/minio
  pullPolicy: Always
  tag: "latest"

mc_image:
  repository: minio/mc
  pullPolicy: Always
  tag: "latest"

presto_image:
  repository: registry.gitlab.com/abyres/releases/presto
  pullPolicy: IfNotPresent
  tag: "0.278.1-20230213.622"

trino_image:
  repository: registry.gitlab.com/abyres/releases/trino
  pullPolicy: IfNotPresent
  tag: "389-20230225.498"

redis_image:
  repository: registry.gitlab.com/abyres/releases/redis
  pullPolicy: IfNotPresent
  tag: "5.0.3-1"

gitsync_image:
  repository: k8s.gcr.io/git-sync
  pullPolicy: IfNotPresent
  tag: "v3.0.1"

gitweb_image:
  repository: registry.gitlab.com/abyres/releases/gitserver
  pullPolicy: IfNotPresent
  tag: "2.31.1-8"

superset_image:
  repository: registry.gitlab.com/abyres/releases/superset
  pullPolicy: IfNotPresent
  tag: "2.0.1-20230407.161"

livy_image:
  repository: registry.gitlab.com/abyres/releases/livy
  pullPolicy: IfNotPresent
  tag: "0.8.0-20230411.1334"


imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: 
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
  #

ingress:
  enabled: true
  annotations: {}
#    nginx.ingress.kubernetes.io/ssl-redirect: "true"
#    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
#    nginx.ingress.kubernetes.io/proxy-body-size: 1G
  domain: elixier.lan

nodeSelector: {}

tolerations: []

affinity: {}

timezone: Asia/Kuala_Lumpur

secrets:
  fernet_key: KsyyWSqLD-CqiyTCE8nfCrIE7YaUtQMj5-3_N9_BnX4=
  secret_key: MumVafdisAwk_orlObwuvadShyralfyifkidcinWakCuefyids
  previous_secret_key: ''

hive:
  metastore_uri: 
  metastore_port: 9083
  #  metastore_db_url: jdbc:mysql://mysql.lan/spark3_hive_metastore?createDatabaseIfNotExist=true&amp;permitMysqlScheme
  metastore_db_name: metastore
  metastore_db_type: postgres
  metastore_db_url: 
  metastore_db_driver: org.postgresql.Driver
  metastore_db_user: metastore
  metastore_db_password: metastore
  metastore_warehouse_dir: s3a://warehouse/tablespace
  metastore_java_options: -Dcom.amazonaws.sdk.disableCertChecking=true

spark:
  executor_cores: 1
  executor_memory: 2g
  executor_instances: 1
  memory_overhead_factor: 0.4
  driver_java_options: "-Dcom.amazonaws.sdk.disableCertChecking=true"
  executor_java_options: "-Dcom.amazonaws.sdk.disableCertChecking=true"
  int96_rebase: CORRECTED

airflow:
  db_uri:
  db_name: airflow
  db_user: airflow
  db_password: aiflow
  dag_git_repository: 
  dag_git_username: user
  dag_git_password: password
  dag_git_branch: master
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
  data_storage: 5Gi

livy:
  enabled: false

smtp:
  enabled: false
  host: ""
  port: "25"
  username: ""
  password: ""
  from: ""
  use_ssl: false
  use_tls: false


s3a:
  access_key: minio
  secret_key: miniopassword
  host:
  protocol:

presto: 
  enabled: false

trino: 
  enabled: true

pgsql:
  root_password: postgres
  pg_version: 14
  pvc_size: 5Gi

minio:
  instance_storage: 2G

jupyterhub:
  instance_storage: 1G
  db_name: jupyterhub
  db_user: jupyterhub
  db_password: jupyterhub

redis:
  instance_storage: 1G

git:
  project_name: project
  pvc_size: 1Gi
  gitweb_password: password
  gitweb_user: user

superset:
  db_name: superset
  db_user: superset
  db_password: superset
  admin_user: admin
  admin_password: admin
  admin_email: admin@localhost.local

ranger:
  enabled: false
  url: http://ranger.elixier.lan
  opensearch_urls: elixier-security-opensearch
  opensearch_user: admin
  opensearch_password: admin
  opensearch_port: 9200
  opensearch_proto: http

keycloak:
  enabled: false
  url: http://keycloak.elixier.lan
  realm: master
  client_id: elixier
  client_secret: ''

datahub:
  enabled: false
  rest_server: http://api.datahub.elixier.lan
  rest_token:

containerWaitTimeout: 3600s
